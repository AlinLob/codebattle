package solution

import kotlin.collections.*
import java.io.*
import java.util.*
import com.google.gson.Gson;

fun main(args: Array<String>) {
  var oldOut_: PrintStream = System.out
  var executionResults_: ArrayList<AssertResult> = ArrayList<AssertResult>()

  try {
    var baos_: ByteArrayOutputStream = ByteArrayOutputStream()
    var newOut_: PrintStream = PrintStream(baos_)
    System.setOut(newOut_)

    var start_: Long
    var executionTime_: Double
    var output_: String
    var time_: String

    <%= for %{arguments: arguments, index: i} <- checks do %>
      <%= for %{defining: defining, value: value} <- arguments.info do %>
    var <%= defining %> = <%= value %>;
      <% end %>
    start_ = System.nanoTime()
    var result<%= i %>_: Any = solution(<%= arguments.expression %>)
    executionTime_ = (System.nanoTime() - start_) / 1_000_000_000.0
    time_ = String.format("%.7f", executionTime_)
    output_ = getOutputAndResetIO(baos_)
    executionResults_.add(getResultMessage(result<%= i %>_, output_, time_))
    <% end %>
    System.setOut(oldOut_)
    printResults(executionResults_)
  } catch (e: Exception) {
    System.setOut(oldOut_)
    var errMessage: ErrorMessage = getErrorMessage(e.toString())
    println(errMessage);
  }
}

fun getOutputAndResetIO(baos: ByteArrayOutputStream): String {
  System.out.flush()
  var output: String = baos.toString()
  baos.reset()
  return output
}

fun getResultMessage(result: Any, output: String, executionTime: String): AssertResult {
 return AssertResult(result, output, executionTime)
}

fun getErrorMessage(message: String): ErrorMessage {
  return ErrorMessage(message)
}

private fun printResults(executionResults: List<AssertResult>) {
    executionResults.forEach { message -> println(message) }
}

data class AssertResult(val value: Any?, val output: String, val time: String) {
    private val type = "result"
    override fun toString(): String = Gson().toJson(this)
}

data class ErrorMessage(val value: String) {
    private val type = "error"
    override fun toString(): String = Gson().toJson(this)
}
