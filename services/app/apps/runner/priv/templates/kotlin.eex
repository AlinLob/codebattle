package solution

import java.io.ByteArrayOutputStream
import java.io.PrintStream
import java.util.ArrayList
import com.google.gson.Gson

fun main(args: Array<String>) {
  var oldOut: PrintStream = System.out
  var executionResults: ArrayList<AssertResult> = ArrayList()

  try {
    var baos: ByteArrayOutputStream = ByteArrayOutputStream()
    var newOut: PrintStream = PrintStream(baos)
    System.setOut(newOut)

    var start: Long
    var executionTime: Double
    var output: String
    var time: String

    <%= for %{arguments: arguments, index: i} <- checks do %>
      <%= for %{defining: defining, value: value} <- arguments.info do %>
    var <%= defining %> = <%= value %>;
      <% end %>
    start = System.nanoTime()
    var result<%= i %>: Any = solution(<%= arguments.expression %>)
    executionTime = (System.nanoTime() - start) / 1_000_000_000.0
    time = String.format("%.7f", executionTime)
    output = getOutputAndResetIO(baos)
    executionResults.add(getResultMessage(result<%= i %>, output, time))
    <% end %>
    System.setOut(oldOut)
    printResults(executionResults)
  } catch (e: Exception) {
    System.setOut(oldOut)
    var errMessage: ErrorMessage = getErrorMessage(e.toString())
    println(errMessage);
  }
}

fun getOutputAndResetIO(baos: ByteArrayOutputStream): String {
  System.out.flush()
  var output: String = baos.toString()
  baos.reset()
  return output
}

fun getResultMessage(result: Any, output: String, executionTime: String): AssertResult {
  return AssertResult(result, output, executionTime)
}

fun getErrorMessage(message: String): ErrorMessage {
  return ErrorMessage(message)
}

private fun printResults(executionResults: List<AssertResult>) {
  executionResults.forEach { message -> println(message) }
}

data class AssertResult(val value: Any?, val output: String, val time: String) {
    private val type = "result"
    override fun toString(): String = Gson().toJson(this)
}

data class ErrorMessage(val value: String) {
    private val type = "error"
    override fun toString(): String = Gson().toJson(this)
}
